/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isBalanced(TreeNode root) {
        if(root == null){
            return true;
        }
        if(root.left==null && root.right==null){return true;}
        int lef = height(root.left);
        int rig = height(root.right);
        if(Math.abs(rig-lef)>1){return false;}
        boolean le = isBalanced(root.left);
        boolean ri = isBalanced(root.right);
        if(le == false || ri==false){return false;}
        return true;
    }
    public int height(TreeNode root){
        if(root == null){return 0;}
        int lef = height(root.left);
        int rig = height(root.right);
        return Math.max(lef,rig)+1;
    }
}