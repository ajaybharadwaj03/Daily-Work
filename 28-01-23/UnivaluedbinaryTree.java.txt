/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isUnivalTree(TreeNode root) {
        if(root == null){return true;}
        Queue<TreeNode> q = new LinkedList<>();
        int rv = root.val;
        q.add(root);
        while(q.size()>0){
            int s = q.size();
            for(int i=1;i<=s;i++){
                TreeNode curr = q.poll();
                if(curr.val!=rv){return false;}
                if(curr.left!=null){
                    q.add(curr.left);
                }
                if(curr.right!=null){
                    q.add(curr.right);
                }
            }
        }
        return true;
    }
}