/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public List<List<Integer>> levelOrder(Node root) {
        List<List<Integer>> lst = new ArrayList<>();
        Queue<Node> s = new LinkedList<>();
        if(root == null){return lst;}
        s.add(root);
        while(!s.isEmpty()){
            ArrayList<Integer> ar = new ArrayList<>();
            int len = s.size();
            for(int i=1;i<=len;i++){
                Node curr = s.poll();
                ar.add(curr.val);
                for(Node child : curr.children){
                    s.add(child);
                }
            }
            lst.add(ar);
        }
        return lst;
    }
}