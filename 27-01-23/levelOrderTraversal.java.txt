/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
     
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> lst= new ArrayList<>();
        if(root == null){return lst;}
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        while(queue.size()!=0){
            ArrayList<Integer> ar = new ArrayList<>();

            int s = queue.size();
            for(int i=1;i<=s;i++){
                TreeNode curr = queue.poll();
                ar.add(curr.val);
                if(curr.left!=null){
                    queue.add(curr.left);
                }
                if(curr.right!=null){
                    queue.add(curr.right);
                }
            }
            lst.add(ar);
        }
        return lst;
    }
}